//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.01.11 at 05:13:32 PM IST 
//


package com.ct.cql.elm.model;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for ErrorType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="ErrorType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
 *     &lt;enumeration value="environment"/>
 *     &lt;enumeration value="syntax"/>
 *     &lt;enumeration value="include"/>
 *     &lt;enumeration value="semantic"/>
 *     &lt;enumeration value="internal"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "ErrorType", namespace = "urn:hl7-org:cql-annotations:r1")
@XmlEnum
public enum ErrorType {


    /**
     * An error with the environment in which the translator is running.
     * 
     */
    @XmlEnumValue("environment")
    ENVIRONMENT("environment"),

    /**
     * Any kind of syntax error with the CQL. These errors can be addressed by correcting the error in the input CQL.
     * 
     */
    @XmlEnumValue("syntax")
    SYNTAX("syntax"),

    /**
     * An included CQL library could not be loaded. These errors can be addressed by correcting the error condition for the referenced library.
     * 
     */
    @XmlEnumValue("include")
    INCLUDE("include"),

    /**
     * Any kind of semantic error with the CQL. These errors can be addressed by correcting the error in the input CQL.
     * 
     */
    @XmlEnumValue("semantic")
    SEMANTIC("semantic"),

    /**
     * An unexpected error in the translator. These errors should be reported as issues to the translator tooling support team.
     * 
     */
    @XmlEnumValue("internal")
    INTERNAL("internal");
    private final String value;

    ErrorType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static ErrorType fromValue(String v) {
        for (ErrorType c: ErrorType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
